from flask import Flask, render_template, request, redirect, url_for, session, flash

app = Flask(__name__)
app.secret_key = 'your_secret_key'

# Dummy credentials for example
users = {
    'student1': {'password': 'password1', 'student_id': '001', 'role': 'student'},
    'admin1': {'password': 'adminpass', 'admin_id': 'admin001', 'role': 'admin'}
}

@app.route('/')
def home():
    return render_template('home.html')

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        login_type = request.form['login_type']  # student or admin

        # Handle student login
        if login_type == 'student':
            student_id = request.form['student_id']
            if username in users and users[username]['password'] == password and users[username].get('student_id') == student_id and users[username]['role'] == 'student':
                session['username'] = username
                session['role'] = 'student'
                return redirect(url_for('student_dashboard'))
            else:
                flash('Invalid student credentials, please try again.')
                return redirect(url_for('login'))

        # Handle admin login
        elif login_type == 'admin':
            admin_id = request.form['admin_id']
            if username in users and users[username]['password'] == password and users[username].get('admin_id') == admin_id and users[username]['role'] == 'admin':
                session['username'] = username
                session['role'] = 'admin'
                return redirect(url_for('admin_dashboard'))
            else:
                flash('Invalid admin credentials, please try again.')
                return redirect(url_for('login'))

    return render_template('login.html')

@app.route('/student_dashboard')
def student_dashboard():
    if 'username' in session and session.get('role') == 'student':
        return render_template('dashboard.html', username=session['username'])  # Render dashboard.html for students
    else:
        flash('You are not authorized to access the student dashboard!')
        return redirect(url_for('login'))

@app.route('/admin_dashboard')
def admin_dashboard():
    if 'username' in session and session.get('role') == 'admin':
        return render_template('admin_dashboard.html', username=session['username'])
    else:
        flash('You are not authorized to access the admin dashboard!')
        return redirect(url_for('login'))

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        name = request.form['name']
        email = request.form['email']
        password = request.form['password']
        student_id = request.form['student_id']
        phone = request.form['phone']
        faculty = request.form['faculty']
        gender = request.form['gender']

        # Check if the email is already in use
        if email in users:
            flash('Email is already registered.')
            return redirect(url_for('register'))

        # Add user to the dictionary (you may want to save this to a database in a real application)
        users[email] = {'password': password, 'student_id': student_id, 'role': 'student'}

        # Log the user in
        session['username'] = name
        session['role'] = 'student'

        # Redirect to student dashboard
        return redirect(url_for('student_dashboard'))

    return render_template('register.html')

if __name__ == '__main__':
    app.run(debug=True)
