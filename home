from flask import Flask, render_template, request, redirect, url_for, session, flash

app = Flask(__name__)
app.secret_key = 'your_secret_key'

# Sample book data for faculties
books_data = {
    'fci': [
        {'bookid': 1, 'name': 'Introduction to Algorithms', 'isbn': '9780262033848', 'author_name': 'Thomas H. Cormen', 'description': 'A comprehensive guide to algorithms.', 'picture': 'algorithms.jpg'},
        {'bookid': 2, 'name': 'Artificial Intelligence', 'isbn': '9780136042594', 'author_name': 'Stuart Russell', 'description': 'An introduction to AI.', 'picture': 'ai.jpg'}
        # Add 8 more books for FCI
    ],
    'foe': [
        {'bookid': 1, 'name': 'Mechanics of Materials', 'isbn': '9780073398235', 'author_name': 'James M. Gere', 'description': 'An in-depth look into materials mechanics.', 'picture': 'materials.jpg'},
        {'bookid': 2, 'name': 'Thermodynamics', 'isbn': '9780133482177', 'author_name': 'Michael J. Moran', 'description': 'Basic principles of thermodynamics.', 'picture': 'thermodynamics.jpg'}
        # Add 8 more books for FOE
    ],
    'fca': [
        {'bookid': 1, 'name': 'Business Management', 'isbn': '9780273711215', 'author_name': 'David Boddy', 'description': 'Understanding the core concepts of management.', 'picture': 'business.jpg'},
        {'bookid': 2, 'name': 'Marketing Principles', 'isbn': '9780132169027', 'author_name': 'Philip Kotler', 'description': 'A fundamental look at marketing.', 'picture': 'marketing.jpg'}
        # Add 8 more books for FCA
    ],
    'fom': [
        {'bookid': 1, 'name': 'Financial Accounting', 'isbn': '9781292128979', 'author_name': 'Walter T. Harrison', 'description': 'An introduction to financial accounting.', 'picture': 'accounting.jpg'},
        {'bookid': 2, 'name': 'Managerial Accounting', 'isbn': '9780133058788', 'author_name': 'Ray H. Garrison', 'description': 'Principles of managerial accounting.', 'picture': 'managerial.jpg'}
        # Add 8 more books for FOM
    ]
}

# Sample user data
users = {
    'hervin': {'password': 'password', 'student_id': '1221103173', 'user_type': 'student'},
    'admin': {'password': 'password1', 'admin_id': 'admin1', 'user_type': 'admin'}
}

@app.route('/')
def home():
    return render_template('home.html')

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        user_type = request.form['login_type']

        if user_type == 'student':
            student_id = request.form['student_id']
            if username in users and users[username]['password'] == password and users[username].get('student_id') == student_id:
                session['username'] = username
                session['user_type'] = 'student'
                return redirect(url_for('dashboard'))
            else:
                flash('Invalid student credentials, please try again.')
                return redirect(url_for('login'))

        elif user_type == 'admin':
            admin_id = request.form['admin_id']
            if username in users and users[username]['password'] == password and users[username].get('admin_id') == admin_id:
                session['username'] = username
                session['user_type'] = 'admin'
                return redirect(url_for('admin_dashboard'))
            else:
                flash('Invalid admin credentials, please try again.')
                return redirect(url_for('login'))

    return render_template('login.html')

@app.route('/dashboard')
def dashboard():
    if 'username' in session and session.get('user_type') == 'student':
        return render_template('dashboard.html', username=session['username'])
    else:
        flash('You are not logged in as a student!')
        return redirect(url_for('login'))

@app.route('/admin_dashboard')
def admin_dashboard():
    if 'username' in session and session.get('user_type') == 'admin':
        return render_template('admin_dashboard.html', username=session['username'])
    else:
        flash('You are not logged in as an admin!')
        return redirect(url_for('login'))

@app.route('/view_books/<faculty>')
def view_books(faculty):
    if 'username' in session:
        if faculty in books_data:
            books = books_data[faculty]
            return render_template('view_books.html', books=books, faculty=faculty)
        else:
            flash('Invalid faculty selected!')
            return redirect(url_for('dashboard'))
    else:
        flash('You need to log in first!')
        return redirect(url_for('login'))

@app.route('/borrowed_books')
def borrowed_books():
    if 'username' in session:
        return render_template('borrowed_books.html')
    else:
        flash('You need to log in first!')
        return redirect(url_for('login'))

@app.route('/logout')
def logout():
    session.clear()
    flash('You have been logged out.')
    return redirect(url_for('login'))

if __name__ == '__main__':
    app.run(debug=True)
